<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<groupId>video-stream-collector</groupId>
	<artifactId>video-stream-collector</artifactId>
	<version>1.0.0</version>
		<dependencies>
			<!-- kafka -->
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka_2.11</artifactId>
				<version>0.11.0.3</version>
			</dependency>
			<dependency>
				<groupId>io.protostuff</groupId>
				<artifactId>protostuff-core</artifactId>
				<version>1.7.2</version>
			</dependency>
			<dependency>
				<groupId>io.protostuff</groupId>
				<artifactId>protostuff-runtime</artifactId>
				<version>1.7.2</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>1.18.2</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>com.esotericsoftware</groupId>
				<artifactId>kryo</artifactId>
				<version>5.0.0-RC7</version>
			</dependency>
			<!-- gson -->
			<dependency>
				<groupId>com.google.code.gson</groupId>
				<artifactId>gson</artifactId>
				<version>2.8.0</version>
			</dependency>
			<!-- commons-lang -->
			<dependency>
				<groupId>commons-lang</groupId>
				<artifactId>commons-lang</artifactId>
				<version>2.6</version>
			</dependency>
			<!-- log4j -->
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>1.2.17</version>
			</dependency>
			<dependency>
				<groupId>opencv</groupId>
				<artifactId>opencv</artifactId>
				<version>3.4.7</version>
			</dependency>
		</dependencies>
	<!--	如何编译以及打包项目-->
	<build>
		<!--		a安装本地资源目录，到时候能不能找到资源还需要另外考虑-->
		<resources>
			<resource>
				<directory>${basedir}/src/main/resources</directory>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<!--				安装本地jar包到本地仓库中就能在依赖中使用-->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
				<version>2.5.2</version>
				<executions>
				<!--					执行的参数-->
					<execution>
						<id>install-external</id>
<!--						执行的阶段-->
						<phase>clean</phase>
<!--						基本配置，软件的参数，参照命令即可-->
						<configuration>
							<file>${basedir}/lib/opencv/opencv-320.jar</file>
							<repositoryLayout>default</repositoryLayout>
							<groupId>opencv</groupId>
							<artifactId>opencv</artifactId>
							<version>3.2.0</version>
							<packaging>jar</packaging>
							<generatePom>true</generatePom>
						</configuration>
<!--						完成的功能-->
						<goals>
							<goal>install-file</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
<!--				指定使用的编译器-->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.6.1</version>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<plugin>
<!--				打包工具，多个jar包封装在一起-->
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-shade-plugin</artifactId>
				<version>3.0.0</version>
				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>shade</goal>
						</goals>
						<configuration>
							<transformers>
								<transformer
									implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
									<mainClass>com.iot.video.app.kafka.collector.VideoStreamCollector</mainClass>
								</transformer>
							</transformers>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
			<groupId>org.apache.maven.plugins</groupId>
			<artifactId>maven-resources-plugin</artifactId>
			<executions>
			<execution>
				<id>copy-target</id>
				<phase>package</phase>
				<goals>
					<goal>copy-resources</goal>
				</goals>
				<configuration>
					<encoding>UTF-8</encoding>

					<!--打成jar包后复制到的路径-->
					<outputDirectory>
						F:\shared\spark-example
					</outputDirectory>

					<resources>
						<resource>
							<!--项目中的路径-->
							<excludes>
								<exclude>classes/*</exclude>
								<exclude>maven-archiver/*</exclude>
								<exclude>spring/*</exclude>
								<exclude>maven-status/*</exclude>
							</excludes>
							<directory> ${project.build.directory}</directory>
						</resource>
					</resources>
				</configuration>
			</execution>
			</executions>
			</plugin>

		</plugins>
	</build>
</project>